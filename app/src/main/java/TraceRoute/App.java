/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package TraceRoute;

import TraceRoute.ea.Conductor;
import TraceRoute.ea.Route;
import TraceRoute.osm.OpenStreetMap;
import TraceRoute.shape.Shape;
import com.github.davidmoten.rtree.geometry.Point;
import io.jenetics.jpx.GPX;
import io.jenetics.jpx.Track;
import io.jenetics.jpx.TrackSegment;

import java.awt.geom.Point2D;
import java.io.File;
import java.io.IOException;
import java.nio.file.Path;
import java.util.LinkedList;
import java.util.List;
import java.util.Scanner;


public class App {
    public static void main(String[] args) {
        List<Point2D> route = new LinkedList<>();
        double a,b;
        try {
            OpenStreetMap osm = new OpenStreetMap("../maps/cyclable.osm.pbf");

            File myObj = new File("../pythontests/points");
            Scanner myReader = new Scanner(myObj);
            while (myReader.hasNextLine()) {
                String data = myReader.nextLine();
                a = Double.parseDouble(data.split(",")[0]);
                b = Double.parseDouble(data.split(",")[1]);
                route.add(new Point2D.Double(a,b));
            }
            System.out.println(route);
            myReader.close();

            Route optimalRoute = new Conductor(new Shape(route).getPath(), osm).findOptimalRoute();
            System.out.print("https://www.google.com/maps/dir/");
            for (Point point : optimalRoute.getPointList()) System.out.printf("%s,%s/", point.y(), point.x());
            System.out.println();
            GPX gpx = GPX.builder().build();
            TrackSegment track = TrackSegment.builder().build();
            for(Point point : optimalRoute.getPointList()) {
                track = track.toBuilder().addPoint(p->p.lon(point.x1()).lat(point.y1())).build();
            }
            Track segment = Track.builder().addSegment(track).build();
            gpx = gpx.toBuilder().addTrack(segment).build();
            GPX.write(gpx, Path.of("route.gpx"));
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
